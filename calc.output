Grammar

    0 $accept: input $end

    1 input: %empty
    2      | main

    3 main: INT MAIN LP RP BLOCK

    4 RE: RETURN INTEGER_LITERAL

    5 content: %empty
    6        | statement content

    7 BLOCK: LCB content RCB
    8      | condition LCB content RCB
    9      | if_content ELSE LCB content RCB

   10 condition: WHILE compare

   11 if_condition: IF compare

   12 if_content: if_condition LCB content RCB

   13 compare: LP exp EQU_OP exp RP
   14        | LP exp NOT_EQU exp RP
   15        | LP exp SMALL_EQU exp RP
   16        | LP exp BIG_EQU exp RP
   17        | LP exp SMALL exp RP
   18        | LP exp BIG exp RP
   19        | exp

   20 statement: def SEMICOLON
   21          | exp SEMICOLON
   22          | output SEMICOLON
   23          | read SEMICOLON
   24          | RE SEMICOLON
   25          | BLOCK
   26          | BREAK SEMICOLON

   27 def: INT ID
   28    | INT ID EQUAL exp
   29    | CHAR STRID

   30 output: PRINT exp

   31 read: READ ID

   32 exp: INTEGER_LITERAL
   33    | ID
   34    | SUB exp
   35    | LP exp RP
   36    | ID EQUAL exp
   37    | exp PLUS exp
   38    | exp SUB exp
   39    | exp MULT exp
   40    | exp DIV exp


Terminals, with rules where they appear

$end (0) 0
error (256)
MAIN (258) 3
RETURN (259) 4
INT (260) 3 27 28
CHAR (261) 29
PRINT (262) 30
READ (263) 31
BREAK (264) 26
IF (265) 11
ELSE (266) 9
WHILE (267) 10
ID (268) 27 28 31 33 36
STRID (269) 29
INTEGER_LITERAL (270) 4 32
SEMICOLON (271) 20 21 22 23 24 26
LCB (272) 7 8 9 12
RCB (273) 7 8 9 12
LP (274) 3 13 14 15 16 17 18 35
RP (275) 3 13 14 15 16 17 18 35
EQU_OP (276) 13
NOT_EQU (277) 14
BIG_EQU (278) 16
SMALL_EQU (279) 15
BIG (280) 18
SMALL (281) 17
EQUAL (282) 28 36
PLUS (283) 37
SUB (284) 34 38
MULT (285) 39
DIV (286) 40


Nonterminals, with rules where they appear

$accept (32)
    on left: 0
input (33)
    on left: 1 2, on right: 0
main (34)
    on left: 3, on right: 2
RE (35)
    on left: 4, on right: 24
content (36)
    on left: 5 6, on right: 6 7 8 9 12
BLOCK (37)
    on left: 7 8 9, on right: 3 25
condition (38)
    on left: 10, on right: 8
if_condition (39)
    on left: 11, on right: 12
if_content (40)
    on left: 12, on right: 9
compare (41)
    on left: 13 14 15 16 17 18 19, on right: 10 11
statement (42)
    on left: 20 21 22 23 24 25 26, on right: 6
def (43)
    on left: 27 28 29, on right: 20
output (44)
    on left: 30, on right: 22
read (45)
    on left: 31, on right: 23
exp (46)
    on left: 32 33 34 35 36 37 38 39 40, on right: 13 14 15 16 17 18
    19 21 28 30 34 35 36 37 38 39 40


State 0

    0 $accept: . input $end

    INT  shift, and go to state 1

    $default  reduce using rule 1 (input)

    input  go to state 2
    main   go to state 3


State 1

    3 main: INT . MAIN LP RP BLOCK

    MAIN  shift, and go to state 4


State 2

    0 $accept: input . $end

    $end  shift, and go to state 5


State 3

    2 input: main .

    $default  reduce using rule 2 (input)


State 4

    3 main: INT MAIN . LP RP BLOCK

    LP  shift, and go to state 6


State 5

    0 $accept: input $end .

    $default  accept


State 6

    3 main: INT MAIN LP . RP BLOCK

    RP  shift, and go to state 7


State 7

    3 main: INT MAIN LP RP . BLOCK

    IF     shift, and go to state 8
    WHILE  shift, and go to state 9
    LCB    shift, and go to state 10

    BLOCK         go to state 11
    condition     go to state 12
    if_condition  go to state 13
    if_content    go to state 14


State 8

   11 if_condition: IF . compare

    ID               shift, and go to state 15
    INTEGER_LITERAL  shift, and go to state 16
    LP               shift, and go to state 17
    SUB              shift, and go to state 18

    compare  go to state 19
    exp      go to state 20


State 9

   10 condition: WHILE . compare

    ID               shift, and go to state 15
    INTEGER_LITERAL  shift, and go to state 16
    LP               shift, and go to state 17
    SUB              shift, and go to state 18

    compare  go to state 21
    exp      go to state 20


State 10

    7 BLOCK: LCB . content RCB

    RETURN           shift, and go to state 22
    INT              shift, and go to state 23
    CHAR             shift, and go to state 24
    PRINT            shift, and go to state 25
    READ             shift, and go to state 26
    BREAK            shift, and go to state 27
    IF               shift, and go to state 8
    WHILE            shift, and go to state 9
    ID               shift, and go to state 15
    INTEGER_LITERAL  shift, and go to state 16
    LCB              shift, and go to state 10
    LP               shift, and go to state 28
    SUB              shift, and go to state 18

    $default  reduce using rule 5 (content)

    RE            go to state 29
    content       go to state 30
    BLOCK         go to state 31
    condition     go to state 12
    if_condition  go to state 13
    if_content    go to state 14
    statement     go to state 32
    def           go to state 33
    output        go to state 34
    read          go to state 35
    exp           go to state 36


State 11

    3 main: INT MAIN LP RP BLOCK .

    $default  reduce using rule 3 (main)


State 12

    8 BLOCK: condition . LCB content RCB

    LCB  shift, and go to state 37


State 13

   12 if_content: if_condition . LCB content RCB

    LCB  shift, and go to state 38


State 14

    9 BLOCK: if_content . ELSE LCB content RCB

    ELSE  shift, and go to state 39


State 15

   33 exp: ID .
   36    | ID . EQUAL exp

    EQUAL  shift, and go to state 40

    $default  reduce using rule 33 (exp)


State 16

   32 exp: INTEGER_LITERAL .

    $default  reduce using rule 32 (exp)


State 17

   13 compare: LP . exp EQU_OP exp RP
   14        | LP . exp NOT_EQU exp RP
   15        | LP . exp SMALL_EQU exp RP
   16        | LP . exp BIG_EQU exp RP
   17        | LP . exp SMALL exp RP
   18        | LP . exp BIG exp RP
   35 exp: LP . exp RP

    ID               shift, and go to state 15
    INTEGER_LITERAL  shift, and go to state 16
    LP               shift, and go to state 28
    SUB              shift, and go to state 18

    exp  go to state 41


State 18

   34 exp: SUB . exp

    ID               shift, and go to state 15
    INTEGER_LITERAL  shift, and go to state 16
    LP               shift, and go to state 28
    SUB              shift, and go to state 18

    exp  go to state 42


State 19

   11 if_condition: IF compare .

    $default  reduce using rule 11 (if_condition)


State 20

   19 compare: exp .
   37 exp: exp . PLUS exp
   38    | exp . SUB exp
   39    | exp . MULT exp
   40    | exp . DIV exp

    PLUS  shift, and go to state 43
    SUB   shift, and go to state 44
    MULT  shift, and go to state 45
    DIV   shift, and go to state 46

    $default  reduce using rule 19 (compare)


State 21

   10 condition: WHILE compare .

    $default  reduce using rule 10 (condition)


State 22

    4 RE: RETURN . INTEGER_LITERAL

    INTEGER_LITERAL  shift, and go to state 47


State 23

   27 def: INT . ID
   28    | INT . ID EQUAL exp

    ID  shift, and go to state 48


State 24

   29 def: CHAR . STRID

    STRID  shift, and go to state 49


State 25

   30 output: PRINT . exp

    ID               shift, and go to state 15
    INTEGER_LITERAL  shift, and go to state 16
    LP               shift, and go to state 28
    SUB              shift, and go to state 18

    exp  go to state 50


State 26

   31 read: READ . ID

    ID  shift, and go to state 51


State 27

   26 statement: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 52


State 28

   35 exp: LP . exp RP

    ID               shift, and go to state 15
    INTEGER_LITERAL  shift, and go to state 16
    LP               shift, and go to state 28
    SUB              shift, and go to state 18

    exp  go to state 53


State 29

   24 statement: RE . SEMICOLON

    SEMICOLON  shift, and go to state 54


State 30

    7 BLOCK: LCB content . RCB

    RCB  shift, and go to state 55


State 31

   25 statement: BLOCK .

    $default  reduce using rule 25 (statement)


State 32

    6 content: statement . content

    RETURN           shift, and go to state 22
    INT              shift, and go to state 23
    CHAR             shift, and go to state 24
    PRINT            shift, and go to state 25
    READ             shift, and go to state 26
    BREAK            shift, and go to state 27
    IF               shift, and go to state 8
    WHILE            shift, and go to state 9
    ID               shift, and go to state 15
    INTEGER_LITERAL  shift, and go to state 16
    LCB              shift, and go to state 10
    LP               shift, and go to state 28
    SUB              shift, and go to state 18

    $default  reduce using rule 5 (content)

    RE            go to state 29
    content       go to state 56
    BLOCK         go to state 31
    condition     go to state 12
    if_condition  go to state 13
    if_content    go to state 14
    statement     go to state 32
    def           go to state 33
    output        go to state 34
    read          go to state 35
    exp           go to state 36


State 33

   20 statement: def . SEMICOLON

    SEMICOLON  shift, and go to state 57


State 34

   22 statement: output . SEMICOLON

    SEMICOLON  shift, and go to state 58


State 35

   23 statement: read . SEMICOLON

    SEMICOLON  shift, and go to state 59


State 36

   21 statement: exp . SEMICOLON
   37 exp: exp . PLUS exp
   38    | exp . SUB exp
   39    | exp . MULT exp
   40    | exp . DIV exp

    SEMICOLON  shift, and go to state 60
    PLUS       shift, and go to state 43
    SUB        shift, and go to state 44
    MULT       shift, and go to state 45
    DIV        shift, and go to state 46


State 37

    8 BLOCK: condition LCB . content RCB

    RETURN           shift, and go to state 22
    INT              shift, and go to state 23
    CHAR             shift, and go to state 24
    PRINT            shift, and go to state 25
    READ             shift, and go to state 26
    BREAK            shift, and go to state 27
    IF               shift, and go to state 8
    WHILE            shift, and go to state 9
    ID               shift, and go to state 15
    INTEGER_LITERAL  shift, and go to state 16
    LCB              shift, and go to state 10
    LP               shift, and go to state 28
    SUB              shift, and go to state 18

    $default  reduce using rule 5 (content)

    RE            go to state 29
    content       go to state 61
    BLOCK         go to state 31
    condition     go to state 12
    if_condition  go to state 13
    if_content    go to state 14
    statement     go to state 32
    def           go to state 33
    output        go to state 34
    read          go to state 35
    exp           go to state 36


State 38

   12 if_content: if_condition LCB . content RCB

    RETURN           shift, and go to state 22
    INT              shift, and go to state 23
    CHAR             shift, and go to state 24
    PRINT            shift, and go to state 25
    READ             shift, and go to state 26
    BREAK            shift, and go to state 27
    IF               shift, and go to state 8
    WHILE            shift, and go to state 9
    ID               shift, and go to state 15
    INTEGER_LITERAL  shift, and go to state 16
    LCB              shift, and go to state 10
    LP               shift, and go to state 28
    SUB              shift, and go to state 18

    $default  reduce using rule 5 (content)

    RE            go to state 29
    content       go to state 62
    BLOCK         go to state 31
    condition     go to state 12
    if_condition  go to state 13
    if_content    go to state 14
    statement     go to state 32
    def           go to state 33
    output        go to state 34
    read          go to state 35
    exp           go to state 36


State 39

    9 BLOCK: if_content ELSE . LCB content RCB

    LCB  shift, and go to state 63


State 40

   36 exp: ID EQUAL . exp

    ID               shift, and go to state 15
    INTEGER_LITERAL  shift, and go to state 16
    LP               shift, and go to state 28
    SUB              shift, and go to state 18

    exp  go to state 64


State 41

   13 compare: LP exp . EQU_OP exp RP
   14        | LP exp . NOT_EQU exp RP
   15        | LP exp . SMALL_EQU exp RP
   16        | LP exp . BIG_EQU exp RP
   17        | LP exp . SMALL exp RP
   18        | LP exp . BIG exp RP
   35 exp: LP exp . RP
   37    | exp . PLUS exp
   38    | exp . SUB exp
   39    | exp . MULT exp
   40    | exp . DIV exp

    RP         shift, and go to state 65
    EQU_OP     shift, and go to state 66
    NOT_EQU    shift, and go to state 67
    BIG_EQU    shift, and go to state 68
    SMALL_EQU  shift, and go to state 69
    BIG        shift, and go to state 70
    SMALL      shift, and go to state 71
    PLUS       shift, and go to state 43
    SUB        shift, and go to state 44
    MULT       shift, and go to state 45
    DIV        shift, and go to state 46


State 42

   34 exp: SUB exp .
   37    | exp . PLUS exp
   38    | exp . SUB exp
   39    | exp . MULT exp
   40    | exp . DIV exp

    MULT  shift, and go to state 45
    DIV   shift, and go to state 46

    $default  reduce using rule 34 (exp)


State 43

   37 exp: exp PLUS . exp

    ID               shift, and go to state 15
    INTEGER_LITERAL  shift, and go to state 16
    LP               shift, and go to state 28
    SUB              shift, and go to state 18

    exp  go to state 72


State 44

   38 exp: exp SUB . exp

    ID               shift, and go to state 15
    INTEGER_LITERAL  shift, and go to state 16
    LP               shift, and go to state 28
    SUB              shift, and go to state 18

    exp  go to state 73


State 45

   39 exp: exp MULT . exp

    ID               shift, and go to state 15
    INTEGER_LITERAL  shift, and go to state 16
    LP               shift, and go to state 28
    SUB              shift, and go to state 18

    exp  go to state 74


State 46

   40 exp: exp DIV . exp

    ID               shift, and go to state 15
    INTEGER_LITERAL  shift, and go to state 16
    LP               shift, and go to state 28
    SUB              shift, and go to state 18

    exp  go to state 75


State 47

    4 RE: RETURN INTEGER_LITERAL .

    $default  reduce using rule 4 (RE)


State 48

   27 def: INT ID .
   28    | INT ID . EQUAL exp

    EQUAL  shift, and go to state 76

    $default  reduce using rule 27 (def)


State 49

   29 def: CHAR STRID .

    $default  reduce using rule 29 (def)


State 50

   30 output: PRINT exp .
   37 exp: exp . PLUS exp
   38    | exp . SUB exp
   39    | exp . MULT exp
   40    | exp . DIV exp

    PLUS  shift, and go to state 43
    SUB   shift, and go to state 44
    MULT  shift, and go to state 45
    DIV   shift, and go to state 46

    $default  reduce using rule 30 (output)


State 51

   31 read: READ ID .

    $default  reduce using rule 31 (read)


State 52

   26 statement: BREAK SEMICOLON .

    $default  reduce using rule 26 (statement)


State 53

   35 exp: LP exp . RP
   37    | exp . PLUS exp
   38    | exp . SUB exp
   39    | exp . MULT exp
   40    | exp . DIV exp

    RP    shift, and go to state 65
    PLUS  shift, and go to state 43
    SUB   shift, and go to state 44
    MULT  shift, and go to state 45
    DIV   shift, and go to state 46


State 54

   24 statement: RE SEMICOLON .

    $default  reduce using rule 24 (statement)


State 55

    7 BLOCK: LCB content RCB .

    $default  reduce using rule 7 (BLOCK)


State 56

    6 content: statement content .

    $default  reduce using rule 6 (content)


State 57

   20 statement: def SEMICOLON .

    $default  reduce using rule 20 (statement)


State 58

   22 statement: output SEMICOLON .

    $default  reduce using rule 22 (statement)


State 59

   23 statement: read SEMICOLON .

    $default  reduce using rule 23 (statement)


State 60

   21 statement: exp SEMICOLON .

    $default  reduce using rule 21 (statement)


State 61

    8 BLOCK: condition LCB content . RCB

    RCB  shift, and go to state 77


State 62

   12 if_content: if_condition LCB content . RCB

    RCB  shift, and go to state 78


State 63

    9 BLOCK: if_content ELSE LCB . content RCB

    RETURN           shift, and go to state 22
    INT              shift, and go to state 23
    CHAR             shift, and go to state 24
    PRINT            shift, and go to state 25
    READ             shift, and go to state 26
    BREAK            shift, and go to state 27
    IF               shift, and go to state 8
    WHILE            shift, and go to state 9
    ID               shift, and go to state 15
    INTEGER_LITERAL  shift, and go to state 16
    LCB              shift, and go to state 10
    LP               shift, and go to state 28
    SUB              shift, and go to state 18

    $default  reduce using rule 5 (content)

    RE            go to state 29
    content       go to state 79
    BLOCK         go to state 31
    condition     go to state 12
    if_condition  go to state 13
    if_content    go to state 14
    statement     go to state 32
    def           go to state 33
    output        go to state 34
    read          go to state 35
    exp           go to state 36


State 64

   36 exp: ID EQUAL exp .
   37    | exp . PLUS exp
   38    | exp . SUB exp
   39    | exp . MULT exp
   40    | exp . DIV exp

    PLUS  shift, and go to state 43
    SUB   shift, and go to state 44
    MULT  shift, and go to state 45
    DIV   shift, and go to state 46

    $default  reduce using rule 36 (exp)


State 65

   35 exp: LP exp RP .

    $default  reduce using rule 35 (exp)


State 66

   13 compare: LP exp EQU_OP . exp RP

    ID               shift, and go to state 15
    INTEGER_LITERAL  shift, and go to state 16
    LP               shift, and go to state 28
    SUB              shift, and go to state 18

    exp  go to state 80


State 67

   14 compare: LP exp NOT_EQU . exp RP

    ID               shift, and go to state 15
    INTEGER_LITERAL  shift, and go to state 16
    LP               shift, and go to state 28
    SUB              shift, and go to state 18

    exp  go to state 81


State 68

   16 compare: LP exp BIG_EQU . exp RP

    ID               shift, and go to state 15
    INTEGER_LITERAL  shift, and go to state 16
    LP               shift, and go to state 28
    SUB              shift, and go to state 18

    exp  go to state 82


State 69

   15 compare: LP exp SMALL_EQU . exp RP

    ID               shift, and go to state 15
    INTEGER_LITERAL  shift, and go to state 16
    LP               shift, and go to state 28
    SUB              shift, and go to state 18

    exp  go to state 83


State 70

   18 compare: LP exp BIG . exp RP

    ID               shift, and go to state 15
    INTEGER_LITERAL  shift, and go to state 16
    LP               shift, and go to state 28
    SUB              shift, and go to state 18

    exp  go to state 84


State 71

   17 compare: LP exp SMALL . exp RP

    ID               shift, and go to state 15
    INTEGER_LITERAL  shift, and go to state 16
    LP               shift, and go to state 28
    SUB              shift, and go to state 18

    exp  go to state 85


State 72

   37 exp: exp . PLUS exp
   37    | exp PLUS exp .
   38    | exp . SUB exp
   39    | exp . MULT exp
   40    | exp . DIV exp

    MULT  shift, and go to state 45
    DIV   shift, and go to state 46

    $default  reduce using rule 37 (exp)


State 73

   37 exp: exp . PLUS exp
   38    | exp . SUB exp
   38    | exp SUB exp .
   39    | exp . MULT exp
   40    | exp . DIV exp

    MULT  shift, and go to state 45
    DIV   shift, and go to state 46

    $default  reduce using rule 38 (exp)


State 74

   37 exp: exp . PLUS exp
   38    | exp . SUB exp
   39    | exp . MULT exp
   39    | exp MULT exp .
   40    | exp . DIV exp

    $default  reduce using rule 39 (exp)


State 75

   37 exp: exp . PLUS exp
   38    | exp . SUB exp
   39    | exp . MULT exp
   40    | exp . DIV exp
   40    | exp DIV exp .

    $default  reduce using rule 40 (exp)


State 76

   28 def: INT ID EQUAL . exp

    ID               shift, and go to state 15
    INTEGER_LITERAL  shift, and go to state 16
    LP               shift, and go to state 28
    SUB              shift, and go to state 18

    exp  go to state 86


State 77

    8 BLOCK: condition LCB content RCB .

    $default  reduce using rule 8 (BLOCK)


State 78

   12 if_content: if_condition LCB content RCB .

    $default  reduce using rule 12 (if_content)


State 79

    9 BLOCK: if_content ELSE LCB content . RCB

    RCB  shift, and go to state 87


State 80

   13 compare: LP exp EQU_OP exp . RP
   37 exp: exp . PLUS exp
   38    | exp . SUB exp
   39    | exp . MULT exp
   40    | exp . DIV exp

    RP    shift, and go to state 88
    PLUS  shift, and go to state 43
    SUB   shift, and go to state 44
    MULT  shift, and go to state 45
    DIV   shift, and go to state 46


State 81

   14 compare: LP exp NOT_EQU exp . RP
   37 exp: exp . PLUS exp
   38    | exp . SUB exp
   39    | exp . MULT exp
   40    | exp . DIV exp

    RP    shift, and go to state 89
    PLUS  shift, and go to state 43
    SUB   shift, and go to state 44
    MULT  shift, and go to state 45
    DIV   shift, and go to state 46


State 82

   16 compare: LP exp BIG_EQU exp . RP
   37 exp: exp . PLUS exp
   38    | exp . SUB exp
   39    | exp . MULT exp
   40    | exp . DIV exp

    RP    shift, and go to state 90
    PLUS  shift, and go to state 43
    SUB   shift, and go to state 44
    MULT  shift, and go to state 45
    DIV   shift, and go to state 46


State 83

   15 compare: LP exp SMALL_EQU exp . RP
   37 exp: exp . PLUS exp
   38    | exp . SUB exp
   39    | exp . MULT exp
   40    | exp . DIV exp

    RP    shift, and go to state 91
    PLUS  shift, and go to state 43
    SUB   shift, and go to state 44
    MULT  shift, and go to state 45
    DIV   shift, and go to state 46


State 84

   18 compare: LP exp BIG exp . RP
   37 exp: exp . PLUS exp
   38    | exp . SUB exp
   39    | exp . MULT exp
   40    | exp . DIV exp

    RP    shift, and go to state 92
    PLUS  shift, and go to state 43
    SUB   shift, and go to state 44
    MULT  shift, and go to state 45
    DIV   shift, and go to state 46


State 85

   17 compare: LP exp SMALL exp . RP
   37 exp: exp . PLUS exp
   38    | exp . SUB exp
   39    | exp . MULT exp
   40    | exp . DIV exp

    RP    shift, and go to state 93
    PLUS  shift, and go to state 43
    SUB   shift, and go to state 44
    MULT  shift, and go to state 45
    DIV   shift, and go to state 46


State 86

   28 def: INT ID EQUAL exp .
   37 exp: exp . PLUS exp
   38    | exp . SUB exp
   39    | exp . MULT exp
   40    | exp . DIV exp

    PLUS  shift, and go to state 43
    SUB   shift, and go to state 44
    MULT  shift, and go to state 45
    DIV   shift, and go to state 46

    $default  reduce using rule 28 (def)


State 87

    9 BLOCK: if_content ELSE LCB content RCB .

    $default  reduce using rule 9 (BLOCK)


State 88

   13 compare: LP exp EQU_OP exp RP .

    $default  reduce using rule 13 (compare)


State 89

   14 compare: LP exp NOT_EQU exp RP .

    $default  reduce using rule 14 (compare)


State 90

   16 compare: LP exp BIG_EQU exp RP .

    $default  reduce using rule 16 (compare)


State 91

   15 compare: LP exp SMALL_EQU exp RP .

    $default  reduce using rule 15 (compare)


State 92

   18 compare: LP exp BIG exp RP .

    $default  reduce using rule 18 (compare)


State 93

   17 compare: LP exp SMALL exp RP .

    $default  reduce using rule 17 (compare)
